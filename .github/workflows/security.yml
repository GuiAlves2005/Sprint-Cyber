name: Pipeline 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  security-events: write
  actions: read
  contents: read
  issues: write

jobs:
  analise_estatica: # <-- Primeiro nome 
    name: Análise Estática (SAST + SCA)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Instalar e Executar Semgrep (SAST)
        run: |
          pip install semgrep
          semgrep scan --config "auto" --sarif -o semgrep.sarif
        continue-on-error: true
      - name: Fazer Upload do relatório SAST
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
      - name: Executar OWASP Dependency-Check (SCA) com a Action oficial
        uses: Dependency-Check/Dependency-Check_Action@main
        with:
          project: 'Sprint-Cyber'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: '--enableExperimental'
        continue-on-error: true
      - name: Fazer Upload do relatório SCA
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-sca
          path: reports/

  analise_dinamica: # <-- Segundo nome 
    name: Análise Dinâmica (DAST com Nikto Nativo)
    runs-on: ubuntu-latest
    needs: analise_estatica

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Instalar dependências da aplicação
        run: pip install -r requirements.txt

      - name: Iniciar a aplicação em background
        run: python app.py &

      - name: Pausar por 15s para a aplicação iniciar
        run: sleep 15


      - name: Instalar Nikto via apt-get
        run: |
          sudo apt-get update
          sudo apt-get install -y nikto

      - name: Criar diretório para o relatório
        run: mkdir -p nikto-reports

      - name: Executar Nikto Scan
        run: nikto -h http://localhost:5000 -o nikto-reports/nikto_report.html -Format html
        continue-on-error: true
          
      - name: Fazer Upload do relatório DAST (Nikto)
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-dast-nikto
          path: 'nikto-reports/'
